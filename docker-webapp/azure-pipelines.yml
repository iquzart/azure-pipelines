#
# Azure DevOps pipeline
#
# Application     : <Application Name>
# Deployment      : Azure Web App
# Deployment tool : AzureWebAppContainer@1
# Created by      : Muhammed Iqbal
# Maintained by   : <> 
#
#


trigger:
  batch: true
  branches:
    include:
    - master
    - development
  paths:
    #include:
    exclude:
    - chart/* 
    - azure-pipelines.yml
    - README.md

# Don't run against PRs
pr: none

variables:
- group: <Variable Group Name>

- name: tag
  value:  $(Build.SourceBranchName)-$(GitShortSha)

# Agent VM image name
- name: vmImageName
  value: 'ubuntu-latest'

- name: containerRegistryServiceConnection
  value: '<Registry>'

- name: imageRepository
  value: '<Repo>/<Image Name>'

- name: environment-dev
  value: 'dev-XXXXX'


  

stages:
- stage: Build
  displayName: Build image

  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImageName: $(vmImageName)

    steps:
    - checkout: self
      clean: true
      displayName: Cleaning local repo

    - script: GitShortSha=`git rev-parse --short HEAD` && echo "##vso[task.setvariable variable=GitShortSha]$GitShortSha"
      displayName: Set the Git Short SHA as an environment variablie

    - task: DownloadSecureFile@1
      name: ApplePayCertificate
      displayName: 'Download Apple certificate'
      inputs:
          secureFile: 'applePayCert.pem'

    - script: |
          echo Copying $(ApplePayCertificate.secureFilePath) to the $(System.DefaultWorkingDirectory)/certificates directory
          mkdir $(System.DefaultWorkingDirectory)/certificates
          cp $(ApplePayCertificate.secureFilePath) $(System.DefaultWorkingDirectory)/certificates

    - task: DownloadSecureFile@1
      name: MerchantidDomainAssociation
      displayName: 'Download Apple merchantid domain association txt file'
      inputs:
          secureFile: 'apple-developer-merchantid-domain-association.txt'

    - script: |
          echo Copying $(ApplePayCertificate.secureFilePath) to the $(System.DefaultWorkingDirectory)/.well-known directory
          mkdir $(System.DefaultWorkingDirectory)/.well-known
          cp $(MerchantidDomainAssociation.secureFilePath) $(System.DefaultWorkingDirectory)/.well-known

          
    - task: Docker@2
      displayName: Build Container Image
      inputs:
        containerRegistry: '$(containerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
        
    - task: Docker@2
      displayName: Push Image to Container Registry
      inputs:
        containerRegistry: '$(containerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(tag)'

    - task: Bash@3
      displayName: Set variables to share between stages 
      inputs:
        targetType: 'inline'
        script: |
          mkdir -p $(System.DefaultWorkingDirectory)
          echo $(tag) > $(System.DefaultWorkingDirectory)/tag

    - task: PublishPipelineArtifact@1
      displayName: Publish artifacts
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)'
        artifact: 'drop'

- stage: DeployDevelopment
  displayName: Deploy Development
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/development'))
  dependsOn: Build

  jobs:
  - deployment: Development
    displayName: Deploy Development
    environment: $(environment-dev)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'drop'
                          
          - script: tag=`cat $(Pipeline.Workspace)/tag` && echo "##vso[task.setvariable variable=tag]$tag"
            displayName: Set the Git Short SHA as an environment variable

          - task: AzureWebAppContainer@1
            displayName: Deploy Image to Azure Webapp
            inputs:
              azureSubscription: '<Subscription Name>'
              appName: '<App Name>'
              containers: '$(imageRepository):$(tag)'