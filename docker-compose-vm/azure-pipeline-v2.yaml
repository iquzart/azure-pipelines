#
# Azure DevOps pipeline
#
# Application:     dashboard-api
# Deployment:      Docker Host
# Deployment tool: docker-compose (VM)
# Maintained by:   Muhammed Iqbal 
#



trigger:
  batch: true
  branches:
    include:
    - master
    #- development
    #- azure-pipelines
  paths:
    exclude:
    - container_configs/* 
    - azure-pipelines.yml
    - README.md
    - Dockerfile


# Don't run against PRs
pr: none

variables:
- group: dashboard-api

- name: tag
  value:  $(Build.SourceBranchName)-$(GitShortSha)

- name: vmImageName
  value: 'ubuntu-latest'

- name: containerRegistryServiceConnection
  value: 'ACR'

- name: imageRepository
  value: '$(appName)/$(imageName)'

- name: DockerEnvironment_ER
  value: 'Production EatRoot VM'

- name: DockerEnvironment_ZB
  value: 'Production ZoyaBean VM'

stages:
- stage: Build
  displayName: Build Image

  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self
      clean: true
      displayName: Cleaning local repo

    - script: GitShortSha=`git rev-parse --short HEAD` && echo "##vso[task.setvariable variable=GitShortSha]$GitShortSha"
      displayName: Set the Git Short SHA as an environment variablie
             
    - task: Docker@2
      displayName: Build Container Image
      inputs:
        containerRegistry: '$(containerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
        
    - task: Docker@2
      displayName: Push Image to ACR
      inputs:
        containerRegistry: '$(containerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(tag)'

    - task: Bash@3
      displayName: Set variables to share between stages 
      inputs:
        targetType: 'inline'
        script: |
          mkdir $(System.DefaultWorkingDirectory)/variables
          echo $(tag) > $(System.DefaultWorkingDirectory)/variables/tag

    - task: PublishPipelineArtifact@1
      displayName: Publish artifacts
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/variables'
        artifact: 'drop'


- stage: Deploy_EatRoot
  displayName: Deploy Eatroot
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: Build

  jobs:
  - deployment: Dashboard_API
    displayName: Deploy Dashboard-api
    pool:
      vmImage: $(vmImageName)
    environment:
      name: $(DockerEnvironment_ER)
      resourceType: VirtualMachine
    strategy:
        runOnce:
          deploy:
            steps:

            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: drop
         
            - script: tag=`cat $(Pipeline.Workspace)/drop/tag` && echo "##vso[task.setvariable variable=tag]$tag"
              displayName: Set the Git Short SHA as an environment variable

            - task: Bash@3
              displayName: switch to application directory
              inputs:
                targetType: 'inline'
                script: 'cd /data/eatroot-apps'

            - task: Bash@3
              displayName: Update new image tag
              inputs:
                targetType: 'inline'
                script: sed -E -i'' "s/(.$(imageName):).*/\1$(tag)/" '/data/eatroot-apps/docker-compose.yaml'

            - task: Bash@3
              displayName: Start app with new image
              inputs:
                targetType: 'inline'
                script: 'docker-compose -f /data/eatroot-apps/docker-compose.yaml up -d'

            - task: Bash@3
              displayName: Wait for container to start (15s)
              inputs:
                targetType: 'inline'
                script: 'sleep 15'

            - task: Bash@3
              displayName: Run config cache
              inputs:
                targetType: 'inline'
                script: 'docker exec eatroot-dashboard-api sh -c "php artisan config:cache"'


- stage: Deploy_ZoyaBean
  displayName: Deploy ZoyaBean
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: Build

  jobs:
  - deployment: Dashboard_API
    displayName: Deploy Dashboard-api
    pool:
      vmImage: $(vmImageName)
    environment:
      name: $(DockerEnvironment_ZB)
      resourceType: VirtualMachine
    strategy:
        runOnce:
          deploy:
            steps:

            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: drop
         
            - script: tag=`cat $(Pipeline.Workspace)/drop/tag` && echo "##vso[task.setvariable variable=tag]$tag"
              displayName: Set the Git Short SHA as an environment variable

            - task: Bash@3
              displayName: switch to application directory
              inputs:
                targetType: 'inline'
                script: 'cd /data/zoyabean-apps'

            - task: Bash@3
              displayName: Update new image tag
              inputs:
                targetType: 'inline'
                script: sed -E -i'' "s/(.$(imageName):).*/\1$(tag)/" '/data/zoyabean-apps/docker-compose.yaml'

            - task: Bash@3
              displayName: Start app with new image
              inputs:
                targetType: 'inline'
                script: 'docker-compose -f /data/zoyabean-apps/docker-compose.yaml up -d'

            - task: Bash@3
              displayName: Wait for container to start (15s)
              inputs:
                targetType: 'inline'
                script: 'sleep 15'

            - task: Bash@3
              displayName: Run config cache
              inputs:
                targetType: 'inline'
                script: 'docker exec zoyabean-dashboard-api sh -c "php artisan config:cache"'
